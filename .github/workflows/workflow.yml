name: Build and Publish Wheels

on:
  push:
    tags:
      - 'v*'
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.9', '3.10', '3.11']
        architecture: ['x64']
        include:
          - os: windows-latest
            architecture: x86
          - os: ubuntu-latest
            architecture: x86
          - os: macos-latest
            architecture: arm64
        exclude:
          - os: windows-latest
            python-version: '3.11'
            architecture: x86 # Exclude if Python 3.11 does not support 32-bit
    steps:
      - uses: actions/checkout@v4
      - name: Install and verify gettext on macOS
        if: matrix.os == 'macos-latest'
        run: |
          brew install homebrew/core/gettext
          brew link gettext --force
          ls -l /usr/local/opt/gettext/lib/libintl.8.dylib || echo "libintl.8.dylib not found"
          echo "DYLD_LIBRARY_PATH=/usr/local/opt/gettext/lib:$DYLD_LIBRARY_PATH" >> $GITHUB_ENV
      - name: Install Python on macOS
        if: matrix.os == 'macos-latest'
        run: |
          brew install python@${{ matrix.python-version }}
          echo "PATH=/usr/local/opt/python@${{ matrix.python-version }}/bin:$PATH" >> $GITHUB_PATH
          python3 --version
          pip3 --version
      - name: Setup Python on non-macOS
        if: matrix.os != 'macos-latest'
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.architecture }}
      - name: Verify Python architecture
        run: |
          python -c "import platform; assert platform.architecture()[0] == '${{ matrix.architecture == 'x64' && '64bit' || '32bit' }}', 'Python architecture mismatch'"
      - uses: dtolnay/rust-toolchain@stable
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.architecture == 'x64' && 'x86_64' || matrix.architecture == 'x86' && 'i686' || matrix.architecture == 'arm64' && 'aarch64-apple-darwin' }}
          args: --release --out dist --interpreter ${{ matrix.python-version }}
          manylinux: 2014
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}-${{ matrix.architecture }}-py${{ matrix.python-version }}
          path: dist

  publish:
    needs: build_wheels
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: dist
          pattern: wheels-*
      - name: Publish to PyPI
        env:
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
        run: |
          pip install maturin
          find dist -name '*.whl' -exec maturin publish --skip-existing -u __token__ -p $PYPI_TOKEN --no-sdst {} \;